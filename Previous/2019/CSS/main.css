@font-face {
    font-family: 'hall5';
    src:  url('../fonts/hall5.eot?ir7j6y');
    src:  url('../fonts/hall5.eot?ir7j6y#iefix') format('embedded-opentype'),
    url('../fonts/hall5.ttf?ir7j6y') format('truetype'),
    url('../fonts/hall5.woff?ir7j6y') format('woff'),
    url('../fonts/hall5.svg?ir7j6y#hall5') format('svg');
    font-weight: normal;
    font-style: normal;
}

i {
    /* use !important to prevent issues with browser extensions that change fonts */
    font-family: 'hall5' !important;
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;

    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

#HEC hr{
    background-color: white;
    margin-bottom: 50px;
}

.h5i-mess:before {
    content: "\e900";
}
.h5i-envelope-o:before {
    content: "\f003";
}
.h5i-phone:before {
    content: "\f095";
}


nav {
    float: right;
}
nav ul {
    list-style: none;
    margin: 0;
    padding: 0;
}
nav ul li {
    float: left;
    position: relative;
}
nav ul li a {
    display: block;
    padding: 0 20px;
    line-height: 70px;
    background: #fff;
    color: #463f3f;
    text-decoration: none;
    /*
     The full path of this code is nav ul li a:not(:only-child):after. This means that the code will apply to any a tag in our nav list that is NOT an only child, aka any dropdown. The :after means it comes after the output of the tag. I’ve decided that to specify any nav item as a dropdown, it will be followed by a unicode arrow – ▾ (#9662).
     */
}
nav ul li a:hover {
    background: #f2f2f2;
    color: #fb5958;
}
nav ul li a:not(:only-child):after {
    padding-left: 4px;
    content: ' ▾';
}
nav ul li ul li {
    min-width: 190px;
}
nav ul li ul li a {
    padding: 15px;
    line-height: 20px;
}
.nav-dropdown {
    position: absolute;
    z-index: 1;
    /* Guarantees that the dropdown will display on top of any content. */
    box-shadow: 0 3px 12px rgba(0, 0, 0, 0.15);
    display: none;
}
.nav-mobile {
    display: none;
    position: absolute;
    top: 0;
    right: 0;
    background: #fff;
    height: 70px;
    width: 70px;
}
@media only screen and (max-width: 800px) {
    .nav-mobile {
        display: block;
    }
    nav {
        width: 100%;
        padding: 70px 0 15px;
    }
    nav ul {
        display: none;
    }
    nav ul li {
        float: none;
    }
    nav ul li a {
        padding: 15px;
        line-height: 20px;
    }
    nav ul li ul li a {
        padding-left: 30px;
    }
}
#nav-toggle {
    position: absolute;
    left: 18px;
    top: 22px;
    cursor: pointer;
    padding: 10px 35px 16px 0px;
}
#nav-toggle span, #nav-toggle span:before, #nav-toggle span:after {
    cursor: pointer;
    border-radius: 1px;
    height: 5px;
    width: 35px;
    background: #463f3f;
    position: absolute;
    display: block;
    content: '';
    transition: all 300ms ease-in-out;
}
#nav-toggle span:before {
    top: -10px;
}
#nav-toggle span:after {
    bottom: -10px;
}
#nav-toggle.active span {
    background-color: transparent;
}
#nav-toggle.active span:before, #nav-toggle.active span:after {
    top: 0;
}
#nav-toggle.active span:before {
    transform: rotate(45deg);
}
#nav-toggle.active span:after {
    transform: rotate(-45deg);
}
@media screen and (min-width: 800px) {
    .nav-list {
        display: block !important;
    }
}
/*
 .navigation – the outer wrapper for the navbar. Specifies the height and color, and will stretch the full width of the viewport.
 */
.navigation {
    height: 70px;
    background: #fff;
}
/*
 .nav-container – the inner wrapper for the navbar. Defines how far the actual content should stretch.
 */
.nav-container {
    max-width: 1000px;
    margin: 0 auto;
}
.brand {
    position: absolute;
    padding-left: 20px;
    float: left;
    line-height: 70px;
    text-transform: uppercase;
    font-size: 1.4em;
}
.brand img{
    max-height: 40px;
}
.brand a, .brand a:visited {
    color: #463f3f;
    text-decoration: none;
}
.navigation {
    position: fixed;
    width: 100%;
    z-index: 200000;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}




















.animate {
    font-size: 50px;
    margin: 100px 0 0;
    border-bottom: 2px solid #ccc;
}

.animate span {
    display: inline-block;
}


.animate span:nth-of-type(2) {
    animation-delay: .05s;
}
.animate span:nth-of-type(3) {
    animation-delay: .1s;
}
.animate span:nth-of-type(4) {
    animation-delay: .15s;
}
.animate span:nth-of-type(5) {
    animation-delay: .2s;
}
.animate span:nth-of-type(6) {
    animation-delay: .25s;
}
.animate span:nth-of-type(7) {
    animation-delay: .3s;
}
.animate span:nth-of-type(8) {
    animation-delay: .35s;
}
.animate span:nth-of-type(9) {
    animation-delay: .4s;
}
.animate span:nth-of-type(10) {
    animation-delay: .45s;
}
.animate span:nth-of-type(11) {
    animation-delay: .5s;
}
.animate span:nth-of-type(12) {
    animation-delay: .55s;
}
.animate span:nth-of-type(13) {
    animation-delay: .6s;
}
.animate span:nth-of-type(14) {
    animation-delay: .65s;
}
.animate span:nth-of-type(15) {
    animation-delay: .7s;
}
.animate span:nth-of-type(16) {
    animation-delay: .75s;
}
.animate span:nth-of-type(17) {
    animation-delay: .8s;
}
.animate span:nth-of-type(18) {
    animation-delay: .85s;
}
.animate span:nth-of-type(19) {
    animation-delay: .9s;
}
.animate span:nth-of-type(20) {
    animation-delay: .95s;
}


/* Animation One */

.one span {
    color: white;
    opacity: 0;
    transform: translate(-150px, -50px) rotate(-180deg) scale(3);
    animation: revolveScale .4s forwards;
}

@keyframes revolveScale {
    60% {
        transform: translate(20px, 20px) rotate(30deg) scale(.3);
    }

    100% {
        transform: translate(0) rotate(0) scale(1);
        opacity: 1;
    }
}




#main{
    min-height: 90vh;
    color: #fff;
    background: linear-gradient(-45deg, #EE7752, #E73C7E, #23A6D5, #23D5AB);
    background-size: 400% 400%;
    -webkit-animation: Gradient 15s ease infinite;
    -moz-animation: Gradient 15s ease infinite;
    animation: Gradient 15s ease infinite;
}

@-webkit-keyframes Gradient {
    0% {
        background-position: 0% 50%
    }
    50% {
        background-position: 100% 50%
    }
    100% {
        background-position: 0% 50%
    }
}

@-moz-keyframes Gradient {
    0% {
        background-position: 0% 50%
    }
    50% {
        background-position: 100% 50%
    }
    100% {
        background-position: 0% 50%
    }
}

@keyframes Gradient {
    0% {
        background-position: 0% 50%
    }
    50% {
        background-position: 100% 50%
    }
    100% {
        background-position: 0% 50%
    }
}


